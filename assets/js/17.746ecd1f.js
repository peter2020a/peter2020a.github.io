(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{286:function(a,r,s){"use strict";s.r(r);var e=s(13),l=Object(e.a)({},(function(){var a=this,r=a._self._c;return r("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[r("h1",{attrs:{id:"docker安装mariadb"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#docker安装mariadb"}},[a._v("#")]),a._v(" Docker安装MariaDB")]),a._v(" "),r("ol",[r("li",[r("p",[r("code",[a._v("docker search mariadb")]),a._v(" 搜索mariadb镜像（非必须）")])]),a._v(" "),r("li",[r("p",[r("code",[a._v("docker pull mariadb")]),a._v(" 下载docker镜像")])]),a._v(" "),r("li",[r("p",[r("code",[a._v("docker images")]),a._v(" 查看本地已有的所有镜像")])]),a._v(" "),r("li",[r("p",[r("code",[a._v("mkdir -p /data/mariadb/data")]),a._v(" 建一个目录作为和容器的映射目录")])]),a._v(" "),r("li",[r("p",[r("code",[a._v("docker run --name mariadb -p 3306:3306 -e MYSQL_ROOT_PASSWORD=输入数据库root用户的密码 -v /data/mariadb/data:/var/lib/mysql -d mariadb")])])])]),a._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v("　　--name启动容器设置容器名称为mariadb\n\n　　-p设置容器的3306端口映射到主机3306端口\n\n　　-e MYSQL_ROOT_PASSWORD设置环境变量数据库root用户密码为输入数据库root用户的密码\n\n　　-v设置容器目录/var/lib/mysql映射到本地目录/data/mariadb/data\n\n　　-d后台运行容器mariadb并返回容器id\n")])])]),r("ol",{attrs:{start:"6"}},[r("li",[r("p",[r("code",[a._v("docker ps -a")]),a._v("查看容器是否运行")])]),a._v(" "),r("li",[r("p",[r("code",[a._v("docker container update --restart=always")]),a._v(" 容器id   修改容器为自启动")])]),a._v(" "),r("li",[r("p",[a._v("进入容器"),r("code",[a._v("docker exec -it")]),a._v(" 容器Id bash")])])]),a._v(" "),r("p",[a._v("退出容器："),r("code",[a._v("exit")]),a._v("或者"),r("code",[a._v("Ctrl+P+Q")])]),a._v(" "),r("ol",{attrs:{start:"9"}},[r("li",[r("p",[a._v("在容器内登录数据库 "),r("code",[a._v("mysql -uroot -proot密码")])])]),a._v(" "),r("li",[r("p",[a._v("修改远程登录j及密码")])])]),a._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v("1、设置远程登录：\n\nMariaDB [(none)]> GRANT ALL PRIVILEGES ON *.* TO root@\"%\" IDENTIFIED BY \"root\";\nQuery OK, 0 rows affected (0.00 sec)\n\nMariaDB [(none)]> flush privileges;\nQuery OK, 0 rows affected (0.00 sec)\n2、修改用户密码，以root为例\n\n知道root密码，需要修改\n方法a. 登入数据库来修改\n# mysql -uroot -p /*输入密码进入*/  \n/*第一个方式：直接编辑数据库字段*/  \nMariaDB [(none)]> use mysql;  \nMariaDB [mysql]> UPDATE user SET password=password('newpassword') WHERE user='root';  \nMariaDB [mysql]> flush privileges;  \nMariaDB [mysql]> exit  \n/*第二个方式：修改密码，不用进入mysql*/  \nMariaDB [(none)]> SET password for 'root'@'localhost'=password('newpassword');  \nMariaDB [(none)]> exit;  \n\n忘记密码：\n# systemctl stop mariadb /*先停掉当前的mysql进程，不然执行下一步说进程已经存在*/  \n# mysqld_safe --skip-grant-tables & /*后台直接这个mysql，界面中还会出现日志，直接ctrl+c进入命令行输入*/   \n# ps -ef | grep mariadb /*看进程，会突出显示--skip-grant-tables*/  \n  mysql     3607  3368  0 18:05 pts/0    00:00:00 /usr/libexec/mysqld --basedir=/usr --datadir=/var/lib/mysql   \n  --plugin-dir=/usr/lib64/mysql/plugin --user=mysql --skip-grant-tables --log-error=/var/log/mariadb/mariadb.log   \n  --pid-file=/var/run/mariadb/mariadb.pid --socket=/var/lib/mysql/mysql.sock  \n# mysql /*直接进入mysql，不需要密码等，执行第一步中方法a里两种方式中任何一种即可*/  \nMariaDB [(none)]> use mysql;  \nMariaDB [mysql]> UPDATE user SET password=password('newpassword') WHERE user='root';  \nMariaDB [mysql]> flush privileges;   \nMariaDB [mysql]> exit; /*这个时候用参数--skip-grant-tables启动的mysql已经会要求输入密码才能进入了*/  \n# pkill mysql /*用pkill来杀,kill不死，kill之后自动起来一个*/  \n# systemctl start mariadb /*启动正常的mysql*/\n")])])])])}),[],!1,null,null,null);r.default=l.exports}}]);