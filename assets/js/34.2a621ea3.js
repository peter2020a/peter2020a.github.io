(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{305:function(a,t,s){"use strict";s.r(t);var r=s(13),e=Object(r.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"linux常用命令总结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#linux常用命令总结"}},[a._v("#")]),a._v(" linux常用命令总结")]),a._v(" "),t("h2",{attrs:{id:"前言"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[a._v("#")]),a._v(" 前言")]),a._v(" "),t("p",[a._v("工作中常用的服务器是centos7系统，所以以centos7命令为准。")]),a._v(" "),t("h2",{attrs:{id:"_1、linux下从一台服务器复制文件或文件夹到本地"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1、linux下从一台服务器复制文件或文件夹到本地"}},[a._v("#")]),a._v(" 1、linux下从一台服务器复制文件或文件夹到本地")]),a._v(" "),t("h3",{attrs:{id:"_1-1-从服务器复制文件到本地"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-从服务器复制文件到本地"}},[a._v("#")]),a._v(" 1.1 从服务器复制文件到本地：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("scp root@×××.×××.×××.×××:/data/test.txt /home/myfile/\n")])])]),t("p",[a._v("root@×××.×××.×××.××× root是目标服务器（有你需要拷贝文件的服务器）的用户名，×××.×××.×××.×××是IP地址，如192.168.1.100，后面紧跟的：不要忘记，/data/test.txt是目标服务器中你要拷贝文件的地址，接一个空格，后面的/home/myfile/是本地接收文件的地址。")]),a._v(" "),t("h3",{attrs:{id:"_1-2-从服务器复制文件夹到本地"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-从服务器复制文件夹到本地"}},[a._v("#")]),a._v(" 1.2 从服务器复制文件夹到本地：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("scp -r root@×××.×××.×××.×××:/data/ /home/myfile/\n")])])]),t("p",[a._v("只需在前面加-r即可，就可以拷贝整个文件夹。")]),a._v(" "),t("h3",{attrs:{id:"_1-3从本地复制文件到服务器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-3从本地复制文件到服务器"}},[a._v("#")]),a._v(" 1.3从本地复制文件到服务器：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("scp /home/myfile/test.txt root@192.168.1.100:/data/\n")])])]),t("h3",{attrs:{id:"_1-4从本地复制文件夹到服务器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-4从本地复制文件夹到服务器"}},[a._v("#")]),a._v(" 1.4从本地复制文件夹到服务器：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("scp -r /home/myfile/ root@192.168.1.100:/data/\n")])])]),t("h2",{attrs:{id:"_2、查看历史命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2、查看历史命令"}},[a._v("#")]),a._v(" 2、查看历史命令")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("history\n")])])]),t("h2",{attrs:{id:"_3、查看某个端口被哪个进程占用及kill"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3、查看某个端口被哪个进程占用及kill"}},[a._v("#")]),a._v(" 3、查看某个端口被哪个进程占用及kill")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("# 安装net-tools工具\nyum install net-tools\n\n# 检查端口被哪个进程占用\nnetstat -lnp | grep 8080\n")])])]),t("p",[a._v("操作如下：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("[root@VM-0-10-centos ~]# netstat -lnp | grep 8080\ntcp6       0      0 :::8080                 :::*                    LISTEN      4238/docker-proxy \n\n# 找到进程号：4238\n\n# 查看进程的详细信息\nps 4238\n\n# 杀掉进程\nkill -9 4238\n")])])]),t("h2",{attrs:{id:"_4、不挂断地运行命令nohup"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4、不挂断地运行命令nohup"}},[a._v("#")]),a._v(" 4、不挂断地运行命令nohup")]),a._v(" "),t("p",[a._v("语法："),t("code",[a._v("nohup Command [ Arg ... ] [　& ]")])]),a._v(" "),t("p",[a._v("描述：nohup 命令运行由 Command 参数和任何相关的 Arg 参数指定的命令，忽略所有挂断（SIGHUP）信号。在注销后使用 nohup 命令运行后台中的程序。要运行后台中的 nohup 命令，添加 & （ 表示“and”的符号）到命令的尾部。")]),a._v(" "),t("p",[a._v("操作系统中有三个常用的流：")]),a._v(" "),t("ul",[t("li",[a._v("0：标准输入流 stdin")]),a._v(" "),t("li",[a._v("1：标准输出流 stdout")]),a._v(" "),t("li",[a._v("2：标准错误流 stderr")])]),a._v(" "),t("p",[a._v("一般当我们用 > console.txt，实际是 1>console.txt的省略用法；< console.txt ，实际是 0 < console.txt的省略用法。")]),a._v(" "),t("p",[a._v("举例：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v(">nohup ./start-dishi.sh >output 2>&1 &\n")])])]),t("p",[a._v("解释：")]),a._v(" "),t("ol",[t("li",[a._v("带&的命令行，即使terminal（终端）关闭，或者电脑死机程序依然运行（前提是你把程序递交到服务器上)；")]),a._v(" "),t("li",[t("code",[a._v("2>&1")]),a._v("的意思：")])]),a._v(" "),t("p",[a._v("这个意思是把标准错误（2）重定向到标准输出中（1），而标准输出又导入文件output里面，所以结果是标准错误和标准输出都导入文件output里面了。 至于为什么需要将标准错误重定向到标准输出的原因，那就归结为标准错误没有缓冲区，而stdout有。这就会导致 "),t("code",[a._v(">output 2>output")]),a._v(" 文件output被两次打开，而stdout和stderr将会竞争覆盖，这肯定不是我门想要的.\n　　这就是为什么有人会写成： "),t("code",[a._v("nohup ./command.sh >output 2>output")]),a._v("出错的原因了")]),a._v(" "),t("p",[a._v("最后谈一下"),t("code",[a._v("/dev/null")]),a._v("文件的作用，这是一个无底洞，任何东西都可以定向到这里，但是却无法打开。 所以一般很大的stdou和stderr当你不关心的时候可以利用stdout和stderr定向到这里"),t("code",[a._v(">./command.sh >/dev/null 2>&1")])]),a._v(" "),t("h2",{attrs:{id:"_5、打包tar命令的用法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5、打包tar命令的用法"}},[a._v("#")]),a._v(" 5、打包tar命令的用法")]),a._v(" "),t("h3",{attrs:{id:"常见解压-压缩命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#常见解压-压缩命令"}},[a._v("#")]),a._v(" 常见解压/压缩命令")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("tar \n解包：tar xvf FileName.tar\n打包：tar cvf FileName.tar DirName\n\n（注：tar是打包，不是压缩！）\n\n.gz\n解压1：gunzip FileName.gz\n解压2：gzip -d FileName.gz\n压缩：gzip FileName\n\n.tar.gz 和 .tgz\n解压：tar zxvf FileName.tar.gz\n压缩：tar zcvf FileName.tar.gz DirName\n.bz2\n解压1：bzip2 -d FileName.bz2\n解压2：bunzip2 FileName.bz2\n压缩： bzip2 -z FileName\n\n.tar.bz2\n解压：tar jxvf FileName.tar.bz2\n压缩：tar jcvf FileName.tar.bz2 DirName\n.bz\n解压1：bzip2 -d FileName.bz\n解压2：bunzip2 FileName.bz\n压缩：未知\n\n.tar.bz\n解压：tar jxvf FileName.tar.bz\n压缩：未知\n.Z\n解压：uncompress FileName.Z\n压缩：compress FileName\n\n.tar.Z\n解压：tar Zxvf FileName.tar.Z\n压缩：tar Zcvf FileName.tar.Z DirName\n\n.zip\n解压：unzip FileName.zip\n压缩：zip FileName.zip DirName\n.rar\n解压：rar x FileName.rar\n压缩：rar a FileName.rar DirName \n")])])]),t("h3",{attrs:{id:"命令参数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#命令参数"}},[a._v("#")]),a._v(" 命令参数：")]),a._v(" "),t("h4",{attrs:{id:"必要参数有如下"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#必要参数有如下"}},[a._v("#")]),a._v(" 必要参数有如下：")]),a._v(" "),t("p",[a._v("-A 新增压缩文件到已存在的压缩")]),a._v(" "),t("p",[a._v("-B 设置区块大小")]),a._v(" "),t("p",[a._v("-c 建立新的压缩文件")]),a._v(" "),t("p",[a._v("-d 记录文件的差别")]),a._v(" "),t("p",[a._v("-r 添加文件到已经压缩的文件")]),a._v(" "),t("p",[a._v("-u 添加改变了和现有的文件到已经存在的压缩文件")]),a._v(" "),t("p",[a._v("-x 从压缩的文件中提取文件")]),a._v(" "),t("p",[a._v("-t 显示压缩文件的内容")]),a._v(" "),t("p",[a._v("-z 支持gzip解压文件")]),a._v(" "),t("p",[a._v("-j 支持bzip2解压文件")]),a._v(" "),t("p",[a._v("-Z 支持compress解压文件")]),a._v(" "),t("p",[a._v("-v 显示操作过程")]),a._v(" "),t("p",[a._v("-l 文件系统边界设置")]),a._v(" "),t("p",[a._v("-k 保留原有文件不覆盖")]),a._v(" "),t("p",[a._v("-m 保留文件不被覆盖")]),a._v(" "),t("p",[a._v("-W 确认压缩文件的正确性")]),a._v(" "),t("h4",{attrs:{id:"可选参数如下"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#可选参数如下"}},[a._v("#")]),a._v(" 可选参数如下：")]),a._v(" "),t("p",[a._v("-b 设置区块数目")]),a._v(" "),t("p",[a._v("-C 切换到指定目录")]),a._v(" "),t("p",[a._v("-f 指定压缩文件")]),a._v(" "),t("p",[a._v("--help 显示帮助信息")]),a._v(" "),t("p",[a._v("--version 显示版本信息")]),a._v(" "),t("h3",{attrs:{id:"使用实例"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用实例"}},[a._v("#")]),a._v(" 使用实例")]),a._v(" "),t("h4",{attrs:{id:"实例1-将文件全部打包成tar包"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#实例1-将文件全部打包成tar包"}},[a._v("#")]),a._v(" 实例1：将文件全部打包成tar包")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("tar -cvf log.tar log2012.log    仅打包，不压缩！ \ntar -zcvf log.tar.gz log2012.log   打包后，以 gzip 压缩 \ntar -zcvf log.tar.bz2 log2012.log  打包后，以 bzip2 压缩 \n")])])]),t("p",[a._v("在参数 f 之后的文件档名是自己取的，我们习惯上都用 .tar 来作为辨识。 如果加 z 参数，则以 .tar.gz 或 .tgz 来代表 gzip 压缩过的 tar包； 如果加 j 参数，则以 .tar.bz2 来作为tar包名。")]),a._v(" "),t("h4",{attrs:{id:"实例2-查阅上述-tar包内有哪些文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#实例2-查阅上述-tar包内有哪些文件"}},[a._v("#")]),a._v(" 实例2：查阅上述 tar包内有哪些文件")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("tar -ztvf log.tar.gz\n")])])]),t("p",[a._v("由于我们使用 gzip 压缩的log.tar.gz，所以要查阅log.tar.gz包内的文件时，就得要加上 z 这个参数了。")]),a._v(" "),t("h4",{attrs:{id:"实例3-将tar-包解压缩"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#实例3-将tar-包解压缩"}},[a._v("#")]),a._v(" 实例3：将tar 包解压缩")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("tar -zxvf /opt/soft/test/log.tar.gz\n")])])]),t("p",[a._v("在预设的情况下，我们可以将压缩档在任何地方解开的")]),a._v(" "),t("h4",{attrs:{id:"实例4-只将-tar-内的-部分文件解压出来"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#实例4-只将-tar-内的-部分文件解压出来"}},[a._v("#")]),a._v(" 实例4：只将 /tar 内的 部分文件解压出来")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("tar -zxvf /opt/soft/test/log3.tar.gz log1020.log\n")])])]),t("p",[a._v("我可以透过 tar -ztvf 来查阅 tar 包内的文件名称，如果单只要一个文件，就可以透过这个方式来解压部分文件！")]),a._v(" "),t("h3",{attrs:{id:"实例5-文件备份下来-并且保存其权限"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#实例5-文件备份下来-并且保存其权限"}},[a._v("#")]),a._v(" 实例5：文件备份下来，并且保存其权限")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("tar -zcvpf log31.tar.gz log2014.log log2015.log log2016.log\n")])])]),t("p",[a._v("这个 -p 的属性是很重要的，尤其是当您要保留原本文件的属性时")]),a._v(" "),t("h3",{attrs:{id:"实例6-在-文件夹当中-比某个日期新的文件才备份"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#实例6-在-文件夹当中-比某个日期新的文件才备份"}},[a._v("#")]),a._v(" 实例6：在 文件夹当中，比某个日期新的文件才备份")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('tar -N "2012/11/13" -zcvf log17.tar.gz test\n')])])]),t("h3",{attrs:{id:"实例7-备份文件夹内容是排除部分文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#实例7-备份文件夹内容是排除部分文件"}},[a._v("#")]),a._v(" 实例7：备份文件夹内容是排除部分文件")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("tar --exclude scf/service -zcvf scf.tar.gz scf/*\n")])])]),t("h3",{attrs:{id:"实例8-将文件解压到指定目录下"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#实例8-将文件解压到指定目录下"}},[a._v("#")]),a._v(" 实例8：将文件解压到指定目录下")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("命令：tar zxvf test.tgz -C 指定目录\n\n如：tar zxvf /usr/local/jdk-8u161-linux-x64.tar.gz -C /usr/local/jdk1.8  \n\n     将压缩文件jdk-8u161-linux-x64.tar.gz解压到/usr/local/jdk1.8目录下\n")])])])])}),[],!1,null,null,null);t.default=e.exports}}]);